name: Publish
on:
  workflow_dispatch:
    inputs:
      publish_version:
        description: 'Package version to publish'
        required: true
      vault_version:
        description: 'Vault version'
        required: true

jobs:
    build-n-publish:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v2

        - name: Install dependencies
          run: |
            curl -sSL https://install.python-poetry.org | python3 -

        - name: Update versions
          run: |
            sed -i 's/version = .*/version = "${{ inputs.publish_version }}"/g' pyproject.toml
          working-directory: sdk/orm-django
        
        - name: Update vault version
          run: |
            sed -i 's/DOCKER_TAG=.*/DOCKER_TAG=${{ inputs.vault_version }}/g' run.sh
          working-directory: examples/django-encryption-example
        
        - name: Commit change and push
          run: |
              git config --global user.email "cicd@piiano.com"
              git config --global user.name "Github Actions"
              git add examples/django-encryption-example/run.sh
              git add sdk/orm-django/pyproject.toml
              git status
              git commit -m "update version to ${{ inputs.publish_version }}"
              git push

        - name: Build and publish
          if : success()
          run: |
            poetry config pypi-token.pypi ${{ secrets.PYPI_API_TOKEN }}
            poetry build
            poetry publish
          working-directory: sdk/orm-django
        
        - name: Run example
          if: always()
          run: |
            poetry install
            PVAULT_SERVICE_LICENSE=${{ secrets.PVAULT_SERVICE_LICENSE }} /bin/bash run.sh
          working-directory: examples/django-encryption-example
